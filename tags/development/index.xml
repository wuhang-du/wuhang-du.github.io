<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on Diamondu</title>
    <link>https://wuhang-du.github.io/tags/development/</link>
    <description>Recent content in Development on Diamondu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 26 Jul 2017 08:36:54 +0000</lastBuildDate>
    
	<atom:link href="https://wuhang-du.github.io/tags/development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>我的Git之旅</title>
      <link>https://wuhang-du.github.io/post/2017-07-26-%E6%88%91%E7%9A%84git%E4%B9%8B%E6%97%85/</link>
      <pubDate>Wed, 26 Jul 2017 08:36:54 +0000</pubDate>
      
      <guid>https://wuhang-du.github.io/post/2017-07-26-%E6%88%91%E7%9A%84git%E4%B9%8B%E6%97%85/</guid>
      <description>echo &amp;quot;你好, Git!&amp;quot;;  git remote 命令，定义远端的主机。这个远端，可以是另外一台机器，最常用的就是github
使用git remote -v 就可以显示本地当前仓库的远程主机。
 git remote add [name] [url] example: git remote add origin https://github.com/wuhang-du/leetcode  git merge 命令，即合并，主要提一下 &amp;ndash;no-ff的使用。
示例当前的分支是：master
调用操作之后使用tig 查看当前的状态：
git merge develop 2017-07-26 11:32 du [develop] [master] Merge branch &#39;develop&#39; 结果：master指向了develop,变成了新的master.此时master与 develop 状态相同。 git merge develop --no-ff 2017-07-26 11:32 du M [master] Merge branch &#39;develop&#39; | 2017-07-26 11:31 du | o [develop] test | 2017-07-26 11:28 du M update 结果：master与develop合并，生成了新的master,此状态超前 develop 一次。  git pull 是从远程主机拉取变化，并更新本地的命令。</description>
    </item>
    
    <item>
      <title>wrk压测工具简析</title>
      <link>https://wuhang-du.github.io/post/2017-05-12-start-wrk/</link>
      <pubDate>Fri, 12 May 2017 08:36:54 +0000</pubDate>
      
      <guid>https://wuhang-du.github.io/post/2017-05-12-start-wrk/</guid>
      <description>Wrk是一款高性能的基于Linux平台的压测工具。
 1.基础功能 命令是：
wrk -t12 -c400 -d30s http://127.0.0.1:8080/index.html -t : 线程数 -c : http连接总数。 -d : 测试时长。 -s : lua脚本参数  2.简单分析 wrk主要是
  基于redis的ae模块, 提供异步框架。 nginx的httpparser, 提供http的请求解析。 lua脚本，利用Lua的创建更复杂的测试用例。   3.简单使用 Http压测工具wrk使用指南
wrk &amp;ndash; 小巧轻盈的 http 性能测试工具.</description>
    </item>
    
    <item>
      <title>开始技术博客</title>
      <link>https://wuhang-du.github.io/post/2017-05-11-first/</link>
      <pubDate>Mon, 01 May 2017 08:36:54 +0000</pubDate>
      
      <guid>https://wuhang-du.github.io/post/2017-05-11-first/</guid>
      <description>第一版：2017-5-1
我的第一篇 github 博客, 本博客使用 jekyll + bootstrap 搭建!
感谢 github 提供的 Github Pages 功能!
第二版：2017-7-27
使用Hugo搭建，基于hyde
借鉴了rakyll的css.
独立添加了tags的功能。
echo &amp;quot;你好, Github Pages!&amp;quot;;  </description>
    </item>
    
  </channel>
</rss>